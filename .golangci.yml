run:
  timeout: 5m
  skip-files:
    # Skip autogenerated files.
    - app/embed.go

output:
  sort-results: true

linters:
  enable:
    - depguard
    - errorlint
    - gofumpt
    - goimports
    - revive
    - misspell
    - sloglint

issues:
  max-same-issues: 0
  exclude-rules:
    - path: _test.go
      linters:
        - errcheck

linters-settings:
  depguard:
    rules:
      main:
        deny:
          - pkg: "sync/atomic"
            desc: "Use go.uber.org/atomic instead of sync/atomic"
          - pkg: "github.com/pkg/errors"
            desc: "Use errors or fmt instead of github.com/pkg/errors"
          - pkg: "github.com/stretchr/testify/assert"
            desc: "Use github.com/stretchr/testify/require instead of github.com/stretchr/testify/assert"
          - pkg: "io/ioutil"
            desc: "Use corresponding 'os' or 'io' functions instead."
          - pkg: "regexp"
            desc: "Use github.com/grafana/regexp instead of regexp"
  errcheck:
    exclude-functions:
      # Don't flag lines such as "io.Copy(io.Discard, resp.Body)".
      - io.Copy
      # The next two are used in HTTP handlers, any error is handled by the server itself.
      - io.WriteString
      - (net/http.ResponseWriter).Write
      # No need to check for errors on server's shutdown.
      - (*net/http.Server).Shutdown
      # Never check for rollback errors as Rollback() is called when a previous error was detected.
      - (github.com/prometheus/prometheus/storage.Appender).Rollback
  goimports:
    local-prefixes: github.com/prometheus/promlens
